{
	"wc-comp": {
	 	"scope": "javascript",
	 	"prefix": "wc-comp",
	 	"body": [
			"import { LitElement, html, css } from 'lit-element';",
			"class $1 extends LitElement {",
				"\r",
				"\tconstructor() {",
					"\t\tsuper();",
				"\t}",
				"\r",
				"\tstatic get properties() {",
					"\t\treturn {",
						"\t\t\t//declare properties here",
					"\t\t};",
				"\t}",
				"\r",
				"\tstatic get styles() {",
					"\t\treturn [",
						"\t\t\tcss``",
					"\t\t];",
				"\t}",
				"\r",
				"\trender() {",
					"\t\treturn html``;",
				"\t}",
				"\r",
				"\tshouldUpdate(changedProps) {",
					"\r",
					"\t}",
				"\r",
				"\tfirstUpdated(){",
					"\t\t//Put Code that will run one time in the component lifecycle",
				"\t}",
				"\r",
				"\tupdated(changedProps){",
					"\t\t//Check on properties changed",
				"\t}",
				"\r",
			"}",
			"\r",
			"window.customElements.define('$TM_FILENAME_BASE', $3);"
	 	],
	 	"description": "Creates a Lit-Element component"
	 }
}
{
	"pw-comp": {
	 	"scope": "javascript",
	 	"prefix": "pw-comp",
	 	"body": [
			"import { html, css } from 'lit-element';",
			"import { PageViewElement } from '../page-view-element.js';",
			"import { SharedStyles } from '../shared-styles.js';",
			"\r",
			"// This element is connected to the Redux store.",
			"import { store } from '../store.js';",
			"import { * } from '../actions/$1';",
			"\r",
			"// We are lazy loading its reducer.",
			"import $2 from '../reducers/$3';",
			"store.addReducers({",
				"$4",
			"});",
			"\r",
			"export class $5 extends extends connect(store)(PageViewElement) {",
				"\r",
				"\tstatic get styles() {",
					"\t\treturn [",
						"\t\t\tSharedStyles,",
						"\t\t\tcss``",
					"\t\t];",
				"\t}",
				"\r",
				"\trender() {",
					"\t\treturn html`",
						"\t\t\t<section>",
							"\t\t\t\t<h2>View</h2>",
						"\t\t\t</section>",
					"\t\t`",
				"\t}",
				"\r",
				"\tstateChanged(state) {",
					"\r",
				"\t}",
				"\r",
				"\tshouldUpdate(changedProps) {",
				"\r",
				"\t}",
				"\r",
				"\tfirstUpdated(){",
					"\t\t//Put Code that will run one time in the component lifecycle",
				"\t}",
				"\r",
				"\tupdated(changedProps){",
					"\t\t//Check on properties changed",
				"\t}",
				"\r",
			"}",
			"\r",
			"window.customElements.define('$TM_FILENAME_BASE', $6);"
	 	],
	 	"description": "Creates a Lit-Element component"
	 }
}